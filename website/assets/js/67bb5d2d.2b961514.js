"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[70475],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>g});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),g=i,u=m["".concat(l,".").concat(g)]||m[g]||d[g]||r;return a?n.createElement(u,o(o({ref:t},c),{},{components:a})):n.createElement(u,o({ref:t},c))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},76053:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var n=a(58168),i=a(98587),r=(a(96540),a(15680)),o=["components"],s={id:"validating-admission-policy",title:"Integration with Kubernetes Validating Admission Policy"},l=void 0,p={unversionedId:"validating-admission-policy",id:"version-v3.13.x/validating-admission-policy",title:"Integration with Kubernetes Validating Admission Policy",description:"Feature State: Gatekeeper version v3.13+ (pre-alpha)",source:"@site/versioned_docs/version-v3.13.x/validating-admission-policy.md",sourceDirName:".",slug:"/validating-admission-policy",permalink:"/gatekeeper/website/docs/v3.13.x/validating-admission-policy",draft:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper/edit/master/website/versioned_docs/version-v3.13.x/validating-admission-policy.md",tags:[],version:"v3.13.x",frontMatter:{id:"validating-admission-policy",title:"Integration with Kubernetes Validating Admission Policy"},sidebar:"docs",previous:{title:"Consuming violations using Pubsub",permalink:"/gatekeeper/website/docs/v3.13.x/pubsub"},next:{title:"Operations",permalink:"/gatekeeper/website/docs/v3.13.x/operations"}},c={},d=[{value:"Description",id:"description",level:2},{value:"Motivations",id:"motivations",level:2},{value:"Example Constraint Template",id:"example-constraint-template",level:2}],m={toc:d};function g(e){var t=e.components,a=(0,i.A)(e,o);return(0,r.yg)("wrapper",(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"Feature State"),": Gatekeeper version v3.13+ (pre-alpha)"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"\u2757 This feature is pre-alpha, subject to change (feedback is welcome!). It is disabled by default. To enable the feature,\nset the ",(0,r.yg)("inlineCode",{parentName:"p"},"experimental-enable-k8s-native-validation")," flag to true and use the ",(0,r.yg)("a",{parentName:"p",href:"https://open-policy-agent.github.io/gatekeeper/website/docs/install/#deploying-a-release-using-development-image"},"development build of Gatekeeper"),".  Do not use this feature with ",(0,r.yg)("inlineCode",{parentName:"p"},"validate-template-rego")," flag enabled, as the policies with CEL would get rejected with Rego compilation error.")),(0,r.yg)("h2",{id:"description"},"Description"),(0,r.yg)("p",null,"This feature allows Gatekeeper to integrate with Kubernetes Validating Admission Policy based on ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/google/cel-spec"},"Common Expression Language (CEL)"),", a declarative, in-process admission control alternative to validating admission webhooks."),(0,r.yg)("h2",{id:"motivations"},"Motivations"),(0,r.yg)("p",null,"The Validating Admission Policy feature (disabled by default) was introduced as an alpha feature to Kubernetes v1.26, beta in v1.28. Some of the benefits include:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"in-tree/native in-process"),(0,r.yg)("li",{parentName:"ul"},"reduce admission request latency"),(0,r.yg)("li",{parentName:"ul"},"improve reliability and availability"),(0,r.yg)("li",{parentName:"ul"},"able to fail closed without impacting availability"),(0,r.yg)("li",{parentName:"ul"},"avoid the operational burden of webhooks")),(0,r.yg)("p",null,"To reduce policy fragmentation and simplify the user experience by standardizing the policy experience. We have created an abstraction layer that provides multi-language (e.g. Rego and CEL), multi-target policy enforcement to allow for portable policies and coexistence of numerous policy implementations."),(0,r.yg)("p",null,"The ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/open-policy-agent/frameworks/tree/master/constraint"},"Constraint Framework")," is the library that underlies Gatekeeper. It provides the execution flow Gatekeeper uses to render a decision to the API server. It also provides abstractions that allow us to define constraint templates and constraints: Engine, Enforcement Points, and Targets."),(0,r.yg)("p",null,"Together with Gatekeeper and ",(0,r.yg)("a",{parentName:"p",href:"/gatekeeper/website/docs/v3.13.x/gator"},"gator CLI"),", you can get admission, audit, and shift left validations for both CEL-based Validating Admission Policy and OPA Rego policies, even for clusters that do not support Validating Admission Policy feature yet."),(0,r.yg)("h2",{id:"example-constraint-template"},"Example Constraint Template"),(0,r.yg)("p",null,"To see how it works, check out this ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/open-policy-agent/gatekeeper/tree/master/demo/k8s-validating-admission-policy"},"demo")),(0,r.yg)("p",null,"Example ",(0,r.yg)("inlineCode",{parentName:"p"},"K8sRequiredLabels")," constraint template using the ",(0,r.yg)("inlineCode",{parentName:"p"},"K8sNativeValidation")," engine and CEL expressions that requires resources to contain specified labels with values matching provided regular expressions. A similar policy written in Rego can be seen ",(0,r.yg)("a",{parentName:"p",href:"https://open-policy-agent.github.io/gatekeeper-library/website/validation/requiredlabels"},"here")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srequiredlabels\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRequiredLabels\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          properties:\n            message:\n              type: string\n            labels:\n              type: array\n              items:\n                type: object\n                properties:\n                  key:\n                    type: string\n                  allowedRegex:\n                    type: string\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      code:\n        - engine: K8sNativeValidation\n          source:\n            validations:\n            - expression: "variables.params.labels.all(entry, has(object.metadata.labels) && entry.key in object.metadata.labels)"\n              messageExpression: \'"missing required label, requires all of: " + variables.params.labels.map(entry, entry.key).join(", ")\'\n            - expression: "!variables.params.labels.exists(entry, has(object.metadata.labels) && entry.key in object.metadata.labels && !string(object.metadata.labels[entry.key]).matches(string(entry.allowedRegex)))"\n              message: "regex mismatch"\n')))}g.isMDXComponent=!0}}]);